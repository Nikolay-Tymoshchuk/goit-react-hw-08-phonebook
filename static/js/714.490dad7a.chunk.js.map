{"version":3,"file":"static/js/714.490dad7a.chunk.js","mappings":"6TAQe,SAASA,IACtB,OAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAGF,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KAAgBA,UAEVC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,mCAAG,sGAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,kBAIHR,EAAM,CAAEO,MAAAA,EAAOC,SAAAA,IAJZ,oBAGXC,KAAQC,EAHG,EAGHA,KAAMC,EAHH,EAGGA,MAEhBT,GAASU,EAAAA,EAAAA,IAAO,CAAEF,KAAAA,EAAMC,MAAAA,KACxBb,IACAM,EAAS,aAPI,kDASbS,EAAAA,GAAAA,MACE,mEAVW,0DAAH,sDAed,OACE,kBAAMP,SAAU,SAAAQ,GAAC,OAAIA,EAAEC,gBAAN,EAAwBC,aAAa,MAAtD,WACE,uCAEE,4BACMtB,EAAS,QAAS,CACpBuB,SAAU,CACRC,OAAO,EACPC,QAAS,0BAEXC,QAAS,CACPF,MACE,wEACFC,QAAS,gCAIdvB,EAAOW,QAAS,cAAGc,UAAU,QAAb,SAAsBzB,EAAOW,MAAMY,cAGtD,0CAEE,0BACEG,KAAK,YACD5B,EAAS,WAAY,CACvBuB,SAAU,yBACVM,UAAW,CACTL,MAAO,EACPC,QAAS,0CAEXK,UAAW,CACTN,MAAO,GACPC,QAAS,0CAEXC,QAAS,CACPF,MAAO,0DACPC,QACE,wFAIPvB,EAAOY,WAAY,cAAGa,UAAU,QAAb,SAAsBzB,EAAOY,SAASW,aAE3DlB,IAAa,SAAC,IAAD,CAAQwB,MAAM,aAC5B,oBACEH,KAAK,SACLI,QAAS/B,EAAaW,GACtBqB,SAAU1B,EAHZ,WAKE,sCACA,sBAIP,C","sources":["pages/AuthorizationForm/index.js"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useLoginMutation } from 'services/auth';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { Pulsar } from '@uiball/loaders';\nimport { toast } from 'react-toastify';\n\nexport default function AuthForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const [login, { isLoading }] = useLoginMutation();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmit = async ({ email, password }) => {\n    try {\n      const {\n        data: { user, token },\n      } = await login({ email, password });\n      dispatch(signIn({ user, token }));\n      reset();\n      navigate('/contacts');\n    } catch (error) {\n      toast.error(\n        'Something went wrong. Maybe you entered wrong email or password'\n      );\n    }\n  };\n\n  return (\n    <form onSubmit={e => e.preventDefault()} autoComplete=\"off\">\n      <label>\n        Email*\n        <input\n          {...register('email', {\n            required: {\n              value: true,\n              message: 'This field is required',\n            },\n            pattern: {\n              value:\n                /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n              message: 'Please enter valid email',\n            },\n          })}\n        />\n        {errors.email && <p className=\"error\">{errors.email.message}</p>}\n      </label>\n\n      <label>\n        Password*\n        <input\n          type=\"password\"\n          {...register('password', {\n            required: 'This field is required',\n            minLength: {\n              value: 7,\n              message: 'Password must be at least 7 characters',\n            },\n            maxLength: {\n              value: 12,\n              message: 'Password must be at most 12 characters',\n            },\n            pattern: {\n              value: /^((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n              message:\n                'Password must contain at least one digit, one lowercase and one uppercase letter',\n            },\n          })}\n        />\n        {errors.password && <p className=\"error\">{errors.password.message}</p>}\n      </label>\n      {isLoading && <Pulsar color=\"#5c6386\" />}\n      <button\n        type=\"submit\"\n        onClick={handleSubmit(onSubmit)}\n        disabled={isLoading}\n      >\n        <span>Submit</span>\n        <i></i>\n      </button>\n    </form>\n  );\n}\n"],"names":["AuthForm","useForm","register","handleSubmit","errors","formState","reset","useLoginMutation","login","isLoading","dispatch","useDispatch","navigate","useNavigate","onSubmit","email","password","data","user","token","signIn","toast","e","preventDefault","autoComplete","required","value","message","pattern","className","type","minLength","maxLength","color","onClick","disabled"],"sourceRoot":""}