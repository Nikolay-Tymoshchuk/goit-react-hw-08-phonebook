{"version":3,"file":"static/js/714.490dad7a.chunk.js","mappings":"6TAQe,SAASA,IACtB,OAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAGF,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KAAgBA,UAEVC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,mCAAG,sGAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,kBAIHR,EAAM,CAAEO,MAAAA,EAAOC,SAAAA,IAJZ,oBAGXC,KAAQC,EAHG,EAGHA,KAAMC,EAHH,EAGGA,MAEhBT,GAASU,EAAAA,EAAAA,IAAO,CAAEF,KAAAA,EAAMC,MAAAA,KACxBb,IACAM,EAAS,aAPI,kDASbS,EAAAA,GAAAA,MACE,mEAVW,0DAAH,sDAed,OACE,kBAAMP,SAAU,SAAAQ,GAAC,OAAIA,EAAEC,gBAAN,EAAwBC,aAAa,MAAtD,WACE,uCAEE,4BACMtB,EAAS,QAAS,CACpBuB,SAAU,CACRC,OAAO,EACPC,QAAS,0BAEXC,QAAS,CACPF,MACE,wEACFC,QAAS,gCAIdvB,EAAOW,QAAS,cAAGc,UAAU,QAAb,SAAsBzB,EAAOW,MAAMY,cAGtD,0CAEE,0BACEG,KAAK,YACD5B,EAAS,WAAY,CACvBuB,SAAU,yBACVM,UAAW,CACTL,MAAO,EACPC,QAAS,0CAEXK,UAAW,CACTN,MAAO,GACPC,QAAS,0CAEXC,QAAS,CACPF,MAAO,0DACPC,QACE,wFAIPvB,EAAOY,WAAY,cAAGa,UAAU,QAAb,SAAsBzB,EAAOY,SAASW,aAE3DlB,IAAa,SAAC,IAAD,CAAQwB,MAAM,aAC5B,oBACEH,KAAK,SACLI,QAAS/B,EAAaW,GACtBqB,SAAU1B,EAHZ,WAKE,sCACA,sBAIP,C","sources":["pages/AuthorizationForm/index.js"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { useLoginMutation } from 'services/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signIn } from 'redux/authSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Pulsar } from '@uiball/loaders';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function AuthForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const [login, { isLoading }] = useLoginMutation();\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async ({ email, password }) => {\r\n    try {\r\n      const {\r\n        data: { user, token },\r\n      } = await login({ email, password });\r\n      dispatch(signIn({ user, token }));\r\n      reset();\r\n      navigate('/contacts');\r\n    } catch (error) {\r\n      toast.error(\r\n        'Something went wrong. Maybe you entered wrong email or password'\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={e => e.preventDefault()} autoComplete=\"off\">\r\n      <label>\r\n        Email*\r\n        <input\r\n          {...register('email', {\r\n            required: {\r\n              value: true,\r\n              message: 'This field is required',\r\n            },\r\n            pattern: {\r\n              value:\r\n                /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\r\n              message: 'Please enter valid email',\r\n            },\r\n          })}\r\n        />\r\n        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n      </label>\r\n\r\n      <label>\r\n        Password*\r\n        <input\r\n          type=\"password\"\r\n          {...register('password', {\r\n            required: 'This field is required',\r\n            minLength: {\r\n              value: 7,\r\n              message: 'Password must be at least 7 characters',\r\n            },\r\n            maxLength: {\r\n              value: 12,\r\n              message: 'Password must be at most 12 characters',\r\n            },\r\n            pattern: {\r\n              value: /^((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n              message:\r\n                'Password must contain at least one digit, one lowercase and one uppercase letter',\r\n            },\r\n          })}\r\n        />\r\n        {errors.password && <p className=\"error\">{errors.password.message}</p>}\r\n      </label>\r\n      {isLoading && <Pulsar color=\"#5c6386\" />}\r\n      <button\r\n        type=\"submit\"\r\n        onClick={handleSubmit(onSubmit)}\r\n        disabled={isLoading}\r\n      >\r\n        <span>Submit</span>\r\n        <i></i>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"names":["AuthForm","useForm","register","handleSubmit","errors","formState","reset","useLoginMutation","login","isLoading","dispatch","useDispatch","navigate","useNavigate","onSubmit","email","password","data","user","token","signIn","toast","e","preventDefault","autoComplete","required","value","message","pattern","className","type","minLength","maxLength","color","onClick","disabled"],"sourceRoot":""}