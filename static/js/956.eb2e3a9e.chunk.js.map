{"version":3,"file":"static/js/956.eb2e3a9e.chunk.js","mappings":"0LACA,MAAuB,sBAAvB,EAAoD,sBAApD,EAAkF,uBAAlF,EAAsH,4B,iGCMzGA,EAAU,SAAC,GAAuC,IAAD,IAApCC,QAAWC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,OAC7C,ECL+B,SAACF,EAAIC,GACpC,OAAuCE,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAElBC,EAAoB,mCAAG,+GAENF,EAAcJ,GAFR,cAEnBO,EAFmB,gBAGAA,EAAKC,MAHL,UAGnBC,EAHmB,iDAKhBC,QAAQC,WALQ,eAOvBC,QAAQC,IAAI,aAAcJ,GAPH,kBAQhBC,QAAQI,UARQ,mFAWlBJ,QAAQI,UAXU,0DAAH,qDAoC1B,MAAO,CAAEC,aArBY,WACnBC,EAAAA,GAAAA,QAAcV,IAAwB,CACpCW,QAAS,CACPC,OADO,WAEL,MAAM,oBAAN,OAA2BjB,EAA3B,MACD,GAEHkB,QAAS,CACPD,OADO,WAEL,MAAM,WAAN,OAAkBjB,EAAlB,2BACD,EACDmB,UAAW,KAEbZ,MAAO,CACLU,OADK,WAEH,MAAM,oDACP,EACDE,UAAW,MAGhB,EACsBf,UAAAA,EACxB,CDnCqCgB,CAAkBrB,EAAIC,GAAlDc,EAAR,EAAQA,aAAcV,EAAtB,EAAsBA,UAEtB,OACE,gBAAIiB,UAAWC,EAAf,WACE,SAAC,MAAD,CAAaD,UAAWC,KACxB,4BAAOtB,EAAP,QACA,0BAAOC,KACP,iBAAKoB,UAAWC,EAAhB,WACIlB,IACA,SAAC,MAAD,CACEiB,UAAWC,EACXC,KAAK,SACLC,SAAUpB,EACVqB,QAASX,EAJX,oBASDV,IACC,SAACsB,EAAA,EAAD,CAAMC,KAAM,GAAIC,WAAY,EAAGC,MAAO,EAAGC,MAAM,iBAKxD,EE/BD,EAAuB,2B,8BCGR,SAASC,IACtB,MCAiC,WACjC,IAAcC,GAAaC,EAAAA,EAAAA,MAAnB3B,KACRK,QAAQC,IAAI,gBAAiBoB,GAC7B,IAAME,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAY3B,MAAO,CAAEC,kBAVgBC,EAAAA,EAAAA,UAAQ,WAAO,IAAD,EACrC,wBACEN,QADF,IACEA,OADF,EACEA,EACIE,QAAO,SAAAK,GACP,OAAOA,EAAQvC,KAAKwC,cAAcC,SAASP,EAAOM,cACnD,IACAE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3C,KAAK6C,cAAcD,EAAE5C,KAAjC,WALV,QAKqD,EAEtD,GAAE,CAACkC,EAAQF,IAEeA,SAAAA,EAC5B,CDhBwCc,GAA/Bd,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,iBAElB,OACE,8BACGL,IACC,eAAIX,UAAWC,EAAf,SACGe,EAAiBU,KAAI,SAAAR,GAAO,OAC3B,SAAC1C,EAAD,CAA0BC,QAASyC,GAArBA,EAAQxC,GADK,OAOtC,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contact/index.module.scss?d475","components/Contact/index.js","hooks/useContactActions.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/index.module.scss?0c76","components/ContactsList/index.js","hooks/useFilteredContacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__nL6Dk\",\"icon\":\"Contact_icon__FYpnS\",\"close\":\"Contact_close__RvsLo\",\"buttonsBox\":\"Contact_buttonsBox__X1n60\"};","import PropTypes from 'prop-types';\nimport styles from './index.module.scss';\nimport { Ring } from '@uiball/loaders';\nimport { useContactActions } from 'hooks/useContactActions';\nimport { IoMdContact } from 'react-icons/io';\nimport { CgCloseO } from 'react-icons/cg';\n\nexport const Contact = ({ options: { id, name, number } }) => {\n  const { handleDelete, isLoading } = useContactActions(id, name);\n\n  return (\n    <li className={styles.item}>\n      <IoMdContact className={styles.icon} />\n      <span>{name}:</span>\n      <span>{number}</span>\n      <div className={styles.buttonsBox}>\n        {!isLoading && (\n          <CgCloseO\n            className={styles.close}\n            type=\"button\"\n            disabled={isLoading}\n            onClick={handleDelete}\n          >\n            Delete\n          </CgCloseO>\n        )}\n        {isLoading && (\n          <Ring size={26} lineWeight={5} speed={2} color=\"#899194\" />\n        )}\n      </div>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  options: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { toast } from 'react-toastify';\nimport { useDeleteContactMutation } from 'services/contacts';\n\nexport const useContactActions = (id, name) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleDeletePromised = async () => {\n    try {\n      const data = await deleteContact(id);\n      const innerError = await data.error;\n      if (!innerError) {\n        return Promise.resolve();\n      } else {\n        console.log('error :>> ', innerError);\n        return Promise.reject();\n      }\n    } catch (error) {\n      return Promise.reject();\n    }\n  };\n\n  const handleDelete = () => {\n    toast.promise(handleDeletePromised(), {\n      pending: {\n        render() {\n          return `Deleting contact ${name}...`;\n        },\n      },\n      success: {\n        render() {\n          return `Contact ${name} was deletedðŸ‘Œ`;\n        },\n        autoClose: 2000,\n      },\n      error: {\n        render() {\n          return `Something went wrong ðŸ˜¢. Try again later`;\n        },\n        autoClose: 2000,\n      },\n    });\n  };\n  return { handleDelete, isLoading };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__4jn2q\"};","import { Contact } from '../Contact';\nimport styles from './index.module.scss';\nimport { useFilteredContacts } from 'hooks/useFilteredContacts';\n\nexport default function ContactsList() {\n  const { contacts, filteredContacts } = useFilteredContacts();\n\n  return (\n    <>\n      {contacts && (\n        <ul className={styles.list}>\n          {filteredContacts.map(contact => (\n            <Contact key={contact.id} options={contact} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import { useGetContactsQuery } from 'services/contacts';\nimport { getFilter } from 'redux/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\n\nexport const useFilteredContacts = () => {\n  const { data: contacts } = useGetContactsQuery();\n  console.log('contacts :>> ', contacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = useMemo(() => {\n    return (\n      contacts\n        ?.filter(contact => {\n          return contact.name.toLowerCase().includes(filter.toLowerCase());\n        })\n        .sort((a, b) => a.name.localeCompare(b.name)) ?? []\n    );\n  }, [filter, contacts]);\n\n  return { filteredContacts, contacts };\n};\n"],"names":["Contact","options","id","name","number","useDeleteContactMutation","deleteContact","isLoading","handleDeletePromised","data","error","innerError","Promise","resolve","console","log","reject","handleDelete","toast","pending","render","success","autoClose","useContactActions","className","styles","type","disabled","onClick","Ring","size","lineWeight","speed","color","ContactsList","contacts","useGetContactsQuery","filter","useSelector","getFilter","filteredContacts","useMemo","contact","toLowerCase","includes","sort","a","b","localeCompare","useFilteredContacts","map"],"sourceRoot":""}