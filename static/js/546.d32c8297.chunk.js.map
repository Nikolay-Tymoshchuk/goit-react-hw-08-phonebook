{"version":3,"file":"static/js/546.d32c8297.chunk.js","mappings":"4QACA,G,QAAuB,4B,mBCwFvB,MAlFA,WACE,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAGF,GAAuCC,EAAAA,EAAAA,MAAzBC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WACxB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UAEfC,EAAQ,mCAAG,8FAASC,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAf,kBAEUR,EAASS,MAC9B,SAAAC,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMH,KAAKI,iBAAkBJ,EAAKI,aAAtC,IAHO,yCAMXC,EAAAA,GAAAA,MAAA,kBAAuBL,EAAvB,sBANW,2CASPH,EAAW,CAAEG,KAAAA,EAAMC,OAAAA,IATZ,QAUbI,EAAAA,GAAAA,QAAA,kBAAyBL,EAAzB,oBACAT,IAXa,kDAabc,EAAAA,GAAAA,MAAY,8BACZC,QAAQC,IAAI,aAAZ,MAda,0DAAH,sDAkBd,OACE,kBACEC,UAAWC,EACXV,SAAU,SAAAW,GAAC,OAAIA,EAAEC,gBAAN,EACXC,aAAa,MAHf,WAKE,qCAEE,4BACMzB,EAAS,OAAQ,CACnB0B,SAAU,CACRC,OAAO,EACPC,QAAS,0BAEXC,QAAS,CACPF,MAAO,kCACPC,QAAS,wDAId1B,EAAOW,OAAQ,cAAGQ,UAAU,QAAb,SAAsBnB,EAAOW,KAAKe,cAEpD,uCAEE,4BACM5B,EAAS,SAAU,CACrB0B,SAAU,CACRC,OAAO,EACPC,QAAS,0BAEXC,QAAS,CACPF,MACE,6EACFC,QACE,oGAIP1B,EAAOY,SAAU,cAAGO,UAAU,QAAb,SAAsBnB,EAAOY,OAAOc,cAEtDjB,GAAaH,KAAe,SAACsB,EAAA,EAAD,CAAQC,MAAM,aAC5C,oBACEC,KAAK,SACLC,QAAShC,EAAaW,GACtBsB,SAAUvB,GAAaH,EAHzB,WAKE,2CACA,sBAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/index.module.scss?56c9","components/ContactsForm/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__mz54l\"};","import { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { useGetContactsQuery, useAddContactMutation } from 'services/contacts';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './index.module.scss';\nimport { Pulsar } from '@uiball/loaders';\n\nfunction ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const { data: contacts, isFetching } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const onSubmit = async ({ name, number }) => {\n    try {\n      const response = await contacts.find(\n        item => item?.name.toLowerCase() === name.toLowerCase()\n      );\n      if (response) {\n        toast.error(`Contact ${name} is already exist`);\n        return;\n      }\n      await addContact({ name, number });\n      toast.success(`Contact ${name} has been added`);\n      reset();\n    } catch (error) {\n      toast.error('Oops! Something went wrong');\n      console.log('error :>> ', error);\n    }\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={e => e.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <label>\n        Name\n        <input\n          {...register('name', {\n            required: {\n              value: true,\n              message: 'This field is required',\n            },\n            pattern: {\n              value: /^([a-zA-Z]{2,}\\s?[a-zA-Z]{1,})$/,\n              message: 'Name should contain only Latin letters and space',\n            },\n          })}\n        />\n        {errors.name && <p className=\"error\">{errors.name.message}</p>}\n      </label>\n      <label>\n        Number\n        <input\n          {...register('number', {\n            required: {\n              value: true,\n              message: 'This field is required',\n            },\n            pattern: {\n              value:\n                /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n              message:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n        />\n        {errors.number && <p className=\"error\">{errors.number.message}</p>}\n      </label>\n      {(isLoading || isFetching) && <Pulsar color=\"#5c6386\" />}\n      <button\n        type=\"submit\"\n        onClick={handleSubmit(onSubmit)}\n        disabled={isLoading || isFetching}\n      >\n        <span>Add contact</span>\n        <i></i>\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n"],"names":["useForm","register","handleSubmit","errors","formState","reset","useGetContactsQuery","contacts","data","isFetching","useAddContactMutation","addContact","isLoading","onSubmit","name","number","find","item","toLowerCase","toast","console","log","className","styles","e","preventDefault","autoComplete","required","value","message","pattern","Pulsar","color","type","onClick","disabled"],"sourceRoot":""}